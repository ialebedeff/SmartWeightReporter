@using Microsoft.AspNetCore.Components.Authorization;

@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthState;
@inject NavigationManager Navigation;

<MudThemeProvider Theme="Theme" IsDarkMode="false" />
<MudDialogProvider />
<MudSnackbarProvider />


@if (IsAuthenticated)
{
    <MudLayout>
        <MudAppBar Elevation="0" Style="background-color: rgba(255,255,255,0.7); backdrop-filter: blur(5px);">
            <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Primary"
                       Edge="Edge.Start"
                       OnClick="DrawerToggle" />
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen">
            <MudPaper Width="250px" Class="py-3" Elevation="0">
                <MudNavMenu Dense="true" Rounded="true" Bordered="false" Margin="Margin.Dense" Color="Color.Secondary" Class="pa-2">
                    <MudNavLink Href="/applications" Icon="@Icons.Material.Filled.BarChart">Графики</MudNavLink>
                    <MudNavLink Href="/trucks" Icon="@Icons.Material.Filled.FireTruck">Автомобили</MudNavLink>
                    <MudNavLink Href="/logout" Icon="@Icons.Material.Filled.Logout">Выход</MudNavLink>
                </MudNavMenu>
            </MudPaper>
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudLayout>
}

@code {
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public bool IsAuthenticated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await AuthState.GetAuthenticationStateAsync()
           .ContinueWith(task =>
           {
               if (task.IsFaulted) Navigation.NavigateTo("/login");
               if (task.IsCompletedSuccessfully &&
                   task.Result is not null &&
                   task.Result.User.Identity?.IsAuthenticated is true &&
                  (task.Result.User.IsInRole("User") &&
                  !task.Result.User.IsInRole("Admin")))
               {
                   // Ставим флаг, чтобы страница отрендерилась
                   IsAuthenticated = true;
                   InvokeAsync(StateHasChanged);
                   // Если пользователь авторизован, то пропускаем
                   // Иначе редиректим его на /login
               }
               else { Navigation.NavigateTo("/login"); }
           });
    }

    public MudTheme Theme { get; set; } = new()
        {
            PaletteDark = new PaletteDark()
            {
                Primary = "#192641",
                Background = "#1D2026",
                TextPrimary = "#FEFEFE"
            },
            Palette = new Palette()
            {
                TextPrimary = "#576064",
                Primary = "#15B977",
                Background = "#F5F9FC"
            }
        };
}